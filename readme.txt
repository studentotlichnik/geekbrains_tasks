--------------------------
project.py:
--------------------------
в этом скрипте обучаю модель и тестирую данные

первое - обучаю модель, в скрипте ничего интересного
стандартный алгоритм, не заморачивался на гиперпараметры, ибо
на отладке долго

но 
- предобработку данных лучше определить в функцию, которую
потом вызовем для входящих данных со фласка
- сами данные тоже лучше симулировать сначала хардкодом в скрипте,
так быстрее, чем забирать каждый раз с веб формы (мой опыт)

--------------------------
app.py
--------------------------
здесь мы делаем связку со фласком
забираем данные с метода пост
обрабатываем их в форму, которая понимает модель
выдаем резльутат на html

--------------------------
model.model
--------------------------
это сохраненная модель с файла project.py
ее же вызываем в app.py

--------------------------
procfile
--------------------------
вот именно в таком виде просто надо копирнуть его в папку
он нужен для определения метода обработки для хероку

--------------------------
requirements.txt
--------------------------
сюда пишем все либы, которые вызываем в наших файлах
отдельный вопрос был про gunicorn - его ставить не нужно на локальную машину
он вызывается в виртульаной среде хероку (она на юниксе)


--------------------------
main.html
--------------------------
здесь отдельный язык, но для наших нужд
просто копим и меняем текст
основные моменты 
<head> </head> - заголовок
<form action="{{ url_for('main') }}" method="POST"> - форма, чтобы запустить данные
в конце добавим </form>
<br> <br> - абзац


--------------------------
все остальные файлы
--------------------------
это результат создания виртуальной среды
должны были много раз до этого проходить 
если будут проблемы - напиши, объясню как,
по сути это 2 строчки в терминале

--------------------------
алгоритм действий
--------------------------
1. создаем модель (вкл. обработку входящих данных) в project.py
2. итогом должна быть сохраненная модель 
3. ставим flask, прописываем app.py
4. прописываем нужные либы в requirements.txt
5. кидаем procfile
6. ставим heroku, регистрируемся
7. далее - логинимся через heroku login, любая клавиша
8. грузим нашу папку в хероку через 
git add . && git commit -am "*" && git push heroku master
он попросит авторизацию в гите (возможно)
9. файлы загружены, запускаем приложение в вебе хероку

